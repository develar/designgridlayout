@Override protected JComponent createTopPanel()
{
	JPanel top = new JPanel();
	top.setLayout(new BorderLayout());
	return top;
}

@Override protected void build()
{
	// Use DGL for the list on the left (fixed width)
	DesignGridLayout layout1 = createSubPanel(BorderLayout.LINE_START);
	layout1.row().center().fill().add(scroller);
	
	// Use DGL for the details on the right (variable width)
	DesignGridLayout layout2 = createSubPanel(BorderLayout.CENTER);
	layout2.row().grid(label("Last Name"))	.add(lastNameField)	.grid(label("First Name"))	.add(firstNameField);
	layout2.row().grid(label("Phone"))		.add(phoneField)	.grid(label("Email"))		.add(emailField);
	layout2.row().grid(label("Address 1"))	.add(address1Field);
	layout2.row().grid(label("Address 2"))	.add(address2Field);
	layout2.row().grid(label("City"), 1)		.add(cityField);
	layout2.row().grid(label("State"))		.add(stateField)	.grid(label("Postal Code"))	.add(postalField);
	layout2.row().grid(label("Country"), 1)	.add(countryField);
	layout2.emptyRow();
	layout2.row().center().add(newButton).add(deleteButton).add(editButton).add(saveButton).add(cancelButton);
	
	// Synchronize rows of left and right panels
	// Concretely this means that the first row of the detail panel will be
	// baseline-aligned with the names list in the left panel
	Synchronizer.synchronize(layout1, layout2).alignRows();
}